--FUNCION RETORNA EMP
CREATE OR REPLACE FUNCTION FN_RETORNAR_EMPLEADOS_20191031354(OFICINA VARCHAR2)
RETURN SYS_REFCURSOR
IS
    EMPLEADOS SYS_REFCURSOR;
BEGIN
    
    OPEN EMPLEADOS FOR
    SELECT a.id_employee, a.salary FROM employees A 
    INNER JOIN branch_office B 
    ON A.ID_BOFFICE = b.id_boffice
    WHERE b.address_bo = OFICINA;
    
    RETURN EMPLEADOS;
    
END;

--FUNCION LLAMADO
CREATE OR REPLACE FUNCTION FN_VERIFICACION_20191031354
RETURN NUMBER
IS

     DATOS_EMPLEADOS SYS_REFCURSOR;
    
    TYPE TBL_EMP IS RECORD(
        ID_EMP EMPLOYEES.ID_EMPLOYEE%TYPE,
        SALARIO EMPLOYEES.SALARY%TYPE
    );
    
    FILA TBL_EMP;
    
    CANT_ACTUALIZADO NUMBER(2) := 0;

BEGIN
    
     DATOS_EMPLEADOS := FN_RETORNAR_EMPLEADOS_20191031354('21 Hermina Trail');
   
   LOOP
        FETCH DATOS_EMPLEADOS INTO FILA;
        EXIT WHEN DATOS_EMPLEADOS%NOTFOUND;
        
        IF FILA.SALARIO >= 12000 THEN
            
            UPDATE EMPLOYEES
            SET SALARY = FILA.SALARIO * (1.10)
            WHERE employees.id_employee = FILA.ID_EMP;
            
            CANT_ACTUALIZADO := CANT_ACTUALIZADO + 1;
        
        END IF;
        
   
   END LOOP;
   
   DBMS_OUTPUT.PUT_LINE('CANTIDAD_USAURIO_ACTUALIZADO: ' || CANT_ACTUALIZADO);
   
   COMMIT;
   RETURN 1;

    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('HA OCURRIDO UNA EXCEPTION: ' || SQLCODE);
            ROLLBACK;  
            RETURN 0;
END;

DECLARE

 VALIDADO NUMBER(1);

BEGIN

    VALIDADO := FN_VERIFICACION_20191031354;

    IF VALIDADO = 1 THEN
        DBMS_OUTPUT.PUT_LINE('');
        DBMS_OUTPUT.PUT_LINE('TODO SE EJECUTO CON EXITO');
    ELSE
        DBMS_OUTPUT.PUT_LINE('');
        DBMS_OUTPUT.PUT_LINE('OCURRIO UNA EXCEPCION');
    END IF;
    

END;



